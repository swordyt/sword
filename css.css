1、选择器 属性：值
selector {property: value}
标签名 属性：值
<link rel="stylesheet" type="text/css" href="mystyle.css" />
2、属性具有继承。
3、选择器分组
h1,h2,h3,h4,h5,h6 {
  color: green;
  }
4、派生选择器
【
	（1）、子选择器
h1 > strong {
	color:red;
	}
	（2）、后代选择器
li strong {
    font-style: italic;
    font-weight: normal;
  }
	（3）、相邻兄弟选择器（解释器只能解释第二个）
h1 + p {
	margin-top:50px;
	}
	
】
5、CSS伪类
selector.class : pseudo-class {
	property: value
	}
【
	未被访问状态
a:link {
	color: #FF0000
	}
	点击后的属性
a:visited {
	color: #00FF00
	}
	鼠标放上时的属性
a:hover {
	color: #FF00FF
	}
	点击后的属性
a:active {
	color: #0000FF
	}
	获得焦点后的属性
input:focus{
	background-color:yellow;
	}
	第一个P元素
p:first-child {
	font-weight: bold;
	}
提示：在 CSS 定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。
提示：在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。
提示：伪类名称对大小写不敏感。
】
6、通配符选择器
	* {
	color:red;
	}
	h1 {
	font: 28px Verdana; 
	color: white; 
	background: black;
	}
注意，对声明分组，一定要在各个声明的最后使用分号，这很重要。
7、类选择器
	*.important {
	color:red;
	}
	.important {
	color:red;
	}
	p.important {
	color:red;
	}
8、多类选择器
【
	（1）<p class="important warning">
	.important {
	font-weight:bold;
	}
	.warning {
	font-style:italic;
	}
	.important.warning {
	background:silver;
	}
	（2）同时包含这些类名的元素
	.important.urgent {
	background:silver;
	}
】
9、ID选择器
<em id="mostImportant">This is important!</em>
	#mostImportant {
	color:red; background:yellow;
	}
注：ID选择器区分大小写
10、属性选择器
【
	（1）[attribute]	用于选取带有指定属性的元素。
	（2）[attribute=value]	用于选取带有指定属性和值的元素。
	（3）[attribute~=value]	用于选取属性值中包含指定词汇的元素。
	（4）[attribute|=value]	用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。
	（5）[attribute^=value]	匹配属性值以指定值开头的每个元素。
	（6）[attribute$=value]	匹配属性值以指定值结尾的每个元素。
	（7）[attribute*=value]	匹配属性值中包含指定值的每个元素。
	
】
11、margin(background)、border(backimage)、padding(content)
margin<-border->padding->content
解决fig：
#ID1 {
background-color: #333;
color: #FFF;
margin-top: 10px;
margin-bottom: 10px;
padding-top:1px;
padding-bottom:1px;
}
#ID1 {
background-color: #333;
color: #FFF;
margin-top: 10px;
margin-bottom: 10px;
border-top:1px solid #333;
border-bottom:1px solid #333;
}
注：除非已经声明了 !DOCTYPE，否则使用 margin:auto 在 IE8 以及更早的版本中是无效的。
12、position：relation、absolute
【
top、right、left、bottom
】
注：位置属性 top right left bottom 只能引用相邻的两个边，不能只用上下，或者只用左右。
【
（1）、absolute	
生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。
元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
（2）、fixed	
生成绝对定位的元素，相对于浏览器窗口进行定位。
元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
（3）、relative	
生成相对定位的元素，相对于其正常位置进行定位。
因此，"left:20" 会向元素的 LEFT 位置添加 20 像素。
（4）、static	默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。
（5）、inherit	规定应该从父元素继承 position 属性的值。
】
